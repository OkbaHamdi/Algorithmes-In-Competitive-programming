typedef         long long ll;
const           ll N=1e5+2;
vector<ll> seg;
ll sz=1;
void make_tree(ll tab[],ll n){
    while(sz<n)sz*=2;
    seg.resize(2*sz);
    for(ll i=0;i<n;i++)seg[sz-1+i]=tab[i];
    for(ll i=sz-2;i>=0;i--)seg[i]=seg[2*i+1]+seg[2*i+2];
}
void update_tree(ll ind,ll val){
    seg[sz-1+ind]=val;
    ll cur=sz-1+ind;
    while(cur){
        if(cur%2==0)cur--;
        cur/=2;
        seg[cur]=seg[2*cur+1]+seg[2*cur+2];
    }
}
ll seg_O(ll ind){
    ll res=seg[ind+sz-1];
    ll cur=ind+sz-1;
    while(cur){
        ll temp=cur;
        if(cur%2==0)cur--;
        cur/=2;
        if(temp%2==0)res+=seg[temp-1];
    }
    return res;
}
ll seg_query(ll left,ll right){
    if(!left)return seg_O(right);
    return seg_O(right)-seg_O(left-1);
}
