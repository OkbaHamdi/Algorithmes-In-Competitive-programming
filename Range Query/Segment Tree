vl seg_tree,tab;
ll n;
void make_tree(){
    tab.resize(n);
    rep(i,0,n)cin>>tab[i];
    n = (1 << ((n&(n-1)) ? 32 : 31)- __builtin_clz(n));
    seg_tree.resize(2 * n,0);
    for (int i = 0; i < tab.size(); i++)
        seg_tree[i + n] = tab[i];
    for (int i = n - 1; i >= 0; i--)
        seg_tree[i] = seg_tree[i * 2] + seg_tree[i * 2 + 1];
}
void update_tree(ll ind,ll val){
    seg_tree[n+ind]=val;
    for(ll i=n+ind;i>1;i>>=1)seg_tree[i>>1]=seg_tree[i]+seg_tree[i^1];
}
ll seg_query(ll l, ll r){
    ll res=0;
    l+=n;r+=n;
    for (; l < r; l >>= 1, r >>= 1){
        if (l&1)
            res = seg_tree[l++]+res;

        if (r&1)
            res = seg_tree[--r]+res;
    }
    return res;
}
